{
  "SYNTAX": "MOSDEX/MOSDEX v2-0/MOSDEXSchemaV2-0.json",
  "MODULES": [
    {
      "NAME": "sailco",
      "CLASS": "MODULE",
      "KIND": "MODEL",
      "HEADING": {
        "DESCRIPTION": [
          "Inventory problem with lagged decision variables"
        ],
        "VERSION": [
          "2-0"
        ],
        "REFERENCE": [
          "https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.ide.help/OPL_Studio/opllanguser/topics/opl_languser_app_areas_pwl_inventory.html"
        ],
        "AUTHOR": [
          "Jeremy A. Bloom (jeremyblmca@gmail.com)"
        ],
        "NOTICES": [
          "Copyright 2019 Jeremy A. Bloom"
        ],
        "MATH": [
          "minimize TotalCost",
          "subject to {",
          "forall( t in Periods )",
          "ctCapacity[t]: Regular[t] <= Capacity;",
          "forall( t in Periods )",
          "ctBoat[t]:",
          "Inventory[t]  + Regular[t] + Extra[t] == Inventory[t-1] - Demand[t];",
          "forall( t in Periods)",
          "ctCost[t]:",
          "Cost[t] - RegularCost * Regular[t] - ExtraCost * Extra[t] - InventoryCost * Inventory[t] == 0.0 ",
          "ctTotalCost:",
          "TotalCost - sum ( t in Periods) Cost[t] == 0.0",
          "}"
        ]
      },
      "TABLES": [
        {
          "NAME": "states",
          "CLASS": "TREE",
          "KIND": "INPUT",
          "SCHEMA": {
            "NAME": [
              "state",
              "ancestor",
              "period"
            ],
            "KIND": [
              "INTEGER",
              "INTEGER",
              "INTEGER"
            ],
            "KEYS": [
              "state"
            ],
            "FOREIGN_KEYS": [
              {
                "period": "demands.period"
              }
            ]
          },
          "INSTANCE": [
            [1, 0, 1],
            [2, 1, 2],
            [3, 2, 3],
            [4, 3, 4]
          ]
        },
        {
          "NAME": "demands",
          "CLASS": "DATA",
          "KIND": "INPUT",
          "SCHEMA": {
            "NAME": [
              "period",
              "demand"
            ],
            "KIND": [
              "INTEGER",
              "DOUBLE"
            ],
            "KEYS": [
              "period"
            ]
          },
          "INSTANCE": [
            [
              1,
              40.0
            ],
            [
              2,
              60.0
            ],
            [
              3,
              75.0
            ],
            [
              4,
              25.0
            ]
          ]
        },
        {
          "NAME": "parameters",
          "CLASS": "DATA",
          "KIND": "INPUT",
          "SCHEMA": {
            "NAME": [
              "regularCost",
              "extraCost",
              "capacity",
              "initialInventory",
              "inventoryCost"
            ],
            "KIND": [
              "DOUBLE",
              "DOUBLE",
              "DOUBLE",
              "DOUBLE",
              "DOUBLE"
            ]
          },
          "INSTANCE": [

            [
              400.0,
              450.0,
              40.0,
              10.0,
              20.0
            ]
          ]
        },
        {
          "NAME": "regular",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "SCHEMA": {
            "NAME": [
              "state",
              "colName",
              "lowerBound",
              "upperBound",
              "primalValue"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "DOUBLE",
              "DOUBLE",
              "DOUBLE"
            ],
            "KEYS": [
              "colName"
            ],
            "FOREIGN_KEYS": [
              {
                "state": "states.state"
              }
            ]
          },
          "QUERY": [
            {
              "SELECT":
              [
                "states.state AS state",
                "CONCAT('regular', '_', state) AS colName",
                "0.0 AS lowerBound",
                "parameters.capacity AS upperBound",
                "NULL AS primalValue"
              ],
              "FROM": [ "states", "parameters" ]
            }
          ]
        },
        {
          "NAME": "extra",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "SCHEMA": {
            "NAME": [
              "state",
              "colName",
              "lowerBound",
              "upperBound",
              "primalValue"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "DOUBLE",
              "DOUBLE",
              "DOUBLE"
            ],
            "KEYS": [
              "colName"
            ],
            "FOREIGN_KEYS": [
              {
                "state": "states.state"
              }
            ]
          },
          "QUERY": [
              {
              "SELECT":
              [
                "state AS state",
                "CONCAT('extra', '_', state) AS colName",
                "0.0 AS lowerBound",
                "'Infinity' AS upperBound",
                "NULL as primalValue"
              ],
              "FROM": [ "states" ]
            }
          ]
        },
        {
          "NAME": "inventory",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "SCHEMA": {
            "NAME": [
              "state",
              "colName",
              "lowerBound",
              "upperBound",
              "primalValue"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "DOUBLE",
              "DOUBLE",
              "DOUBLE"
            ],
            "KEYS": [
              "colName"
            ],
            "FOREIGN_KEYS": [
              {
                "state": "states.state"
              }
            ]
          },
          "QUERY": [
              {
              "SELECT":
              [
                "state AS state",
                "CONCAT('inventory', '_', state) AS colName",
                "0.0 AS lowerBound",
                "'Infinity' AS upperBound",
                "NULL AS primalValue"
              ],
              "FROM": [ "states" ]
            }
          ]
        },
        {
          "NAME": "cost",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "SCHEMA": {
            "NAME": [
              "state",
              "colName",
              "lowerBound",
              "upperBound",
              "primalValue"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "DOUBLE",
              "DOUBLE",
              "DOUBLE"
            ],
            "KEYS": [
              "colName"
            ],
            "FOREIGN_KEYS": [
              {
                "state": "states.state"
              }
            ]
          },
          "QUERY": [
            {
              "SELECT": [
                "state AS state",
                "CONCAT('cost', '_', state) AS colName",
                "0.0 as lowerBound",
                "'Infinity' AS upperBound",
                "NULL AS primalValue"
              ],
              "FROM": [
                "states"
              ]
            }
          ]
        },

        {
          "NAME": "ctInventory",
          "CLASS": "CONSTRAINT",
          "KIND": "LINEAR",
          "SCHEMA": {
            "NAME": [
              "state",
              "rowName",
              "sense",
              "RHS",
              "dualValue"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "STRING",
              "DOUBLE",
              "DOUBLE"
            ],
            "KEYS": [
              "rowName"
            ],
            "FOREIGN_KEYS": [
              {
                "state": "states.state"
              }
            ]
          },
          "QUERY": [
            {
              "SELECT":
              [
                "state AS state",
                "CONCAT('ctInventory','_',state) AS rowName",
                "'==' AS sense",
                "parameters.initialInventory AS RHS",
                " NULL AS dualValue"
              ],
              "FROM": ["states"],
              "JOIN": ["parameters"],
              "WHERE": ["states.state == 1"]
            },
            {
              "SELECT":
              [
                "state AS state",
                "CONCAT('ctInventory','_',state) AS rowName",
                "'==' AS sense",
                "0.0 AS RHS",
                " NULL AS dualValue"],
              "FROM": ["states"],
              "JOIN": ["parameters"],
              "WHERE": ["states.state > 1"]
            }
          ]
        },
        {
          "NAME": "ctInventoryMatrix",
          "CLASS": "MATRIX",
          "KIND": "LINEAR",
          "SCHEMA": {
            "NAME": [
              "state",
              "rowName",
              "regularName",
              "regularCoefficient",
              "extraName",
              "extraCoefficient",
              "inventoryName",
              "inventoryCoefficient",
              "laggedInventoryName",
              "laggedInventoryCoefficient"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE"
            ]
          },
          "QUERY": [
            {
              "SELECT": [
                "states.state AS state",
                "ctInventory.rowName AS RowName",
                "regular.colName AS RegularName",
                "1.0 AS RegularCoefficient",
                "extra.colName AS ExtraName",
                "1.0 AS ExtraCoefficient",
                "i1.colName AS InventoryName",
                "-1.0 AS InventoryCoefficient",
                "NULL AS LaggedInventoryName",
                "NULL AS LaggedInventoryCoefficient "
              ],
              "FROM": [
                "states"
              ],
              "JOIN": [
                "ctInventory ON ctInventory.state = states.state",
                "regular ON regular.state = states.state",
                "extra ON extra.state = states.state",
                "inventory i1 ON i1.state = states.state"
              ],
              "WHERE": [
                "states.state == 1"
              ]
            },
            {
              "SELECT": [
                "states.state AS state",
                "ctInventory.rowName AS RowName",
                "regular.colName AS RegularName",
                "1.0 AS RegularCoefficient",
                "extra.colName AS ExtraName",
                "1.0 AS ExtraCoefficient",
                "i1.colName AS InventoryName",
                "-1.0 AS InventoryCoefficient",
                "i2.colName AS LaggedInventoryName",
                "1.0 AS LaggedInventoryCoefficient "
              ],
              "FROM": [
                "states"
              ],
              "JOIN": [
                "ctInventory ON ctInventory.state = states.state",
                "regular ON regular.state = states.state",
                "extra ON extra.state = states.state",
                "inventory i1 ON i1.state = states.state",
                "inventory i2 ON i2.state = states.ancestor"
              ],
              "WHERE": [
                "states.state > 1"
              ]
            }
          ]
        },
        {
          "NAME": "ctCost",
          "CLASS": "CONSTRAINT",
          "KIND": "LINEAR",
          "SCHEMA": {
            "NAME": [
              "state",
              "rowName",
              "sense",
              "RHS",
              "dualValue"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "STRING",
              "DOUBLE",
              "DOUBLE"
            ],
            "KEYS": [
              "rowName"
            ],
            "FOREIGN_KEYS": [
              {
                "state": "states.state"
              }
            ]
          },
          "QUERY": [
            {
              "SELECT": [
                "state AS state",
                "CONCAT('ctCost','_', state) AS rowName",
                "'==' AS sense",
                "0.0 as RHS",
                "NULL as dualValue"
              ],
              "FROM": ["states"]
            }
          ]
        },
        {
          "NAME": "ctCostMatrix",
          "CLASS": "MATRIX",
          "KIND": "LINEAR",
          "SCHEMA": {
            "NAME": [
              "state",
              "rowName",
              "regularName",
              "regularCoefficient",
              "extraName",
              "extraCoefficient",
              "inventoryName",
              "inventoryCoefficient",
              "costName",
              "costCoefficient",
              "laggedCostName",
              "laggedCostCoefficient"
            ],
            "KIND": [
              "INTEGER",
              "STRING",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE",
              "STRING",
              "DOUBLE"
            ]
          },
          "QUERY": [

            {
              "SELECT": [
                "states.state AS state",
                "ctCost.rowName as RowName",

                  "regular.colName as RegularName",
                  "parameters.regularCost AS RegularCoefficient",

                  "extra.colName as ExtraName",
                  "parameters.extraCost AS ExtraCoefficient",

                  "inventory.colName AS InventoryName",
                  "parameters.inventoryCost AS InventoryCoefficient",

                "c1.colName AS CostName",
                "-1.0 AS CostCoefficient",

                "NULL AS LaggedCostName",
                "NULL AS LaggedCostCoefficient "
              ],
              "FROM": [
                "parameters", "states"
              ],
              "JOIN": [
                "ctCost ON ctCost.state = states.state",
                "regular ON regular.state = states.state",
                "extra ON extra.state = states.state",
                "inventory ON inventory.state = states.state",
                "cost c1 ON c1.state = states.state"
              ],
              "WHERE": [
                "states.state == 1"
              ]
            },
            {
              "SELECT": [
                "states.state AS state",
                "ctCost.rowName as RowName",

                  "regular.colName as RegularName",
                  "parameters.regularCost AS RegularCoefficient",

                  "extra.colName as ExtraName",
                  "parameters.extraCost AS ExtraCoefficient",

                  "inventory.colName AS InventoryName",
                  "parameters.inventoryCost AS InventoryCoefficient",

                "c1.colName AS CostName",
                "-1.0 AS CostCoefficient",

                "c2.colName AS LaggedCostName",
                "1.0 AS LaggedCostCoefficient "
              ],
              "FROM": [
                "parameters", "states"
              ],
              "JOIN": [
                "ctCost ON ctCost.state = states.state",
                "regular ON regular.state = states.state",
                "extra ON extra.state = states.state",
                "inventory ON inventory.state = states.state",
                "cost c1 ON c1.state = states.state",
                "cost c2 ON c2.state = states.ancestor"
              ],
              "WHERE": [
                "states.state > 1"
              ]
            }
          ]
        }
      ]
    }
  ]
}
